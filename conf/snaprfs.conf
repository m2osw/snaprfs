# snaprfs configuration
#
# The file is a basic list of `name = value` variables
# Comments start with a # character, must be the first character after spaces
# Empty lines are ignored


# listen=rfs:///<ip>:<port>, rfss:///<ip>:<port>, rfsu:///<ip>:<port>, ...
#
# The IP address and port to a socket to be created to listen for data
# connections.
#
# The 'rfs' protocol uses unencrypted TCP.
# The 'rfss' protocol uses TCP with TLS encryption.
# The 'rfsu' protocol uses UDP without encryption. It can be used to
# broadcast the data.
#
# The snaprfs daemon listens on these addresses and ports for connections.
# At this time, the UDP is not implemented.
#
# You can enter multiple entries separated by commas. Spaces are trimmed.
#
# snaprfs / tcp | udp / private network -- 4044 (rfs -- plain data connection)
# snaprfs / tcp / secure -- 4045 (rfs -- encrypted data connection)
#
# Default: rfs:///127.0.0.1:4044
listen=cd:///127.0.0.1:4044


# communicatord_listen=cd:///<ip>:<port> | cd:///<path>
#
# The IP address and port or a Unix path to a socket of the communicator
# daemon used to interconnect.
#
# The snaprfs daemon connects to the communicator daemon using this
# information. Once connected, all the other services can access the
# snaprfs daemon via their own local communicator daemon connection.
#
# Default: cd:///run/communicatord/communicatord.sock
communicatord_listen=cd:///run/communicatord/communicatord.sock


# vim: wrap
